<div class="comments">
    <h2 class="comments__title">Відповіді</h2>

    <% if (user) { %>
    <div class="comment-form">
        <div class="comment__author">
            <sl-avatar
                initials="<%= user.username.slice(0,2) %>"
                label="User avatar"
            ></sl-avatar>

            <form
                x-data="{ active: false, text: '' }"
                hx-post="/r/comments/<%= postId %>"
                hx-swap="none"
                :class="{ 'comment-form__field': true, 'active': active }"
            >
                <textarea
                    name="content"
                    class="comment-form__textarea"
                    placeholder="Які Ваші думки?"
                    x-model="text"
                    @focus="active = true"
                    x-ref="textarea"
                ></textarea>

                <div class="comment-form__buttons" x-show="active" x-transition>
                    <sl-button
                        class="ghost"
                        size="small"
                        variant="text"
                        type="button"
                        pill
                        @click="active = false; text = '';"
                    >
                        Скасувати
                    </sl-button>

                    <sl-button
                        size="small"
                        variant="primary"
                        pill
                        type="submit"
                        @click="if(text.trim()) { active = false; text = ''; }"
                        :disabled="!text.trim()"
                    >
                        Відправити
                    </sl-button>
                </div>
            </div>
        </div>
    </div>
    <% } %>

    <div
        id="comments-list"
        hx-get="/r/comments/post/<%= postId %>"
        hx-trigger="revealed"
        hx-swap="beforeend"
        hx-indicator=".comments__loading"
    >
        <template x-if="!!cursor">
            <div 
                x-data="{ show: false }"
                id="comment-load-more" 
                class="comment-load-more" 
                :hx-get="`/r/comments/post/<%= postId %>?cursor=${cursor}&pageSize=10`" 
                hx-trigger="revealed"
                hx-swap="outerHTML"
            >
                <sl-spinner></sl-spinner>
                <div>Завантаження коментарів...</div>
            </div>
        </template>
    </div>

    <template id="reply-form-template">
        <div class="comment-form reply">
            <form
                hx-post="/r/comments/<%= postId %>"
                hx-swap="none"
                class="comment-form__field active"
            >
                <input id="parent" name="parentId" type="hidden" />

                <textarea
                    id="content"
                    name="content"
                    class="comment-form__textarea"
                    placeholder="Що скажете на це?"
                ></textarea>

                <div class="comment-form__buttons">
                    <sl-button
                        class="cancel-reply-btn ghost"
                        size="small"
                        variant="text"
                        type="button"
                        pill
                    >
                        Скасувати
                    </sl-button>

                    <sl-button
                        class="submit-reply-btn"
                        size="small"
                        variant="primary"
                        type="submit"
                        pill
                    >
                        Відправити
                    </sl-button>
                </div>
            </form>
        </div>
    </template>

    <script>
        const postId = "<%= postId %>";
        let visibleReplies = new Set();
        let activeFormId = null;


        function toggleReplies(commentId) {
            const repliesContainer = document.getElementById(
                `replies-${commentId}`,
            );
            const replyIcon = document.getElementById(
                `reply-icon-${commentId}`,
            );

            if (repliesContainer) {
                if (visibleReplies.has(commentId)) {
                    repliesContainer.style.display = 'none';
                    visibleReplies.delete(commentId);
                    replyIcon.style.transform = '';
                } else {
                    repliesContainer.style.display = 'block';
                    visibleReplies.add(commentId);
                    replyIcon.style.transform = 'rotate(180deg)';

                    if (!repliesContainer.getAttribute('data-loaded')) {
                        repliesContainer.setAttribute('data-loaded', 'true');
                        htmx.trigger(`#replies-${commentId}`, 'load', {});
                    }
                }
            }
        }

        function removeAllReplyForms() {
            const formContainers = document.querySelectorAll(
                '.reply-form-container',
            );
            formContainers.forEach((container) => {
                container.innerHTML = '';
            });

            activeFormId = null;
        }

        function createReplyForm(commentId, replyId) {
            removeAllReplyForms();

            const template = document.getElementById('reply-form-template');
            const formNode = template.content.cloneNode(true).firstElementChild;

            const textarea = formNode.querySelector('#content');
            const parent = formNode.querySelector('#parent');
            const cancelBtn = formNode.querySelector('.cancel-reply-btn');
            const submitBtn = formNode.querySelector('.submit-reply-btn');

            parent.setAttribute('value', commentId);
            htmx.process(formNode);

            cancelBtn.addEventListener('click', () => {
                removeAllReplyForms();
            });

            submitBtn.addEventListener('click', () => {
                if (textarea.value.trim()) {
                    // If it's a reply to a comment and replies are hidden, show them
                    if (!isReplyToReply && !visibleReplies.has(commentId)) {
                        toggleReplies(commentId);
                    }

                    setTimeout(() => {
                        removeAllReplyForms();
                    }, 100);
                }
            });

            const containerId = `reply-form-container-${replyId ?? commentId}`;
            const container = document.getElementById(containerId);
            if (container) {
                container.innerHTML = '';
                container.appendChild(formNode);

                activeFormId = commentId;

                setTimeout(() => {
                    textarea.focus();
                }, 0);
            }
        }

        document.addEventListener('click', (e) => {
            if (
                activeFormId &&
                !e.target.closest('.comment-form') &&
                !e.target.closest('[data-reply-btn]')
            ) {
                removeAllReplyForms();
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            if (
                'IntersectionObserver' in window &&
                document.getElementById('comment-load-more')
            ) {
                const loadMoreElement =
                    document.getElementById('comment-load-more');

                const observer = new IntersectionObserver(
                    (entries) => {
                        entries.forEach((entry) => {
                            if (entry.isIntersecting) {
                                htmx.trigger(entry.target, 'loadMore', {});
                            }
                        });
                    },
                    { threshold: 0.5 },
                );

                observer.observe(loadMoreElement);
            }
        });
    </script>

    <style>
        .reply-form-container {
            margin: 10px 0;
        }

        .sm {
            transition: transform 0.2s ease;
        }

        .comment-load-more {
            text-align: center;
            padding: 15px;
            margin-top: 10px;
        }
    </style>
</div>
