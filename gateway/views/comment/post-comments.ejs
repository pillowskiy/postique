<div class="comments">
    <h2 class="comments__title">Відповіді</h2>

    <% if (user) { %>
    <div class="comment-form">
        <div class="comment__author">
            <sl-avatar
                label="User avatar"
                <% if (user.avatarUrl) { %>
                    image="<%= user.avatarUrl %>"
                <% } else { %>
                    initials="<%= user.username.slice(0,2) %>"
                <% } %>
            ></sl-avatar>

            <form
                x-data="{ active: false, text: '' }"
                hx-post="/r/comments/<%= postId %>"
                hx-target="#comments-list"
                hx-swap="beforeend"
                :class="{ 'comment-form__field': true, 'active': active }"
            >
                <textarea
                    name="content"
                    class="comment-form__textarea"
                    placeholder="Які Ваші думки?"
                    x-model="text"
                    @focus="active = true"
                    x-ref="textarea"
                ></textarea>

                <div class="comment-form__buttons" x-show="active" x-transition>
                    <sl-button
                        class="ghost"
                        size="small"
                        variant="text"
                        type="button"
                        pill
                        @click="active = false; text = '';"
                    >
                        Скасувати
                    </sl-button>

                    <sl-button
                        size="small"
                        variant="primary"
                        pill
                        type="submit"
                        @click="if(text.trim()) { active = false; text = ''; }"
                        :disabled="!text.trim()"
                    >
                        Відправити
                    </sl-button>
                </div>
            </div>
        </div>
    </div>
    <% } %>

    <div
        id="comments-list"
        hx-get="/r/comments/post/<%= postId %>"
        hx-trigger="revealed"
        hx-swap="beforeend"
    >
        <template x-if="!!cursor">
            <div
                x-data="{ show: false }"
                id="comment-load-more"
                class="comment-load-more"
                :hx-get="`/r/comments/post/<%= postId %>?cursor=${cursor}&pageSize=10`"
                hx-trigger="revealed"
                hx-swap="outerHTML"
            >
                <sl-spinner></sl-spinner>
                <div>Завантаження коментарів...</div>
            </div>
        </template>
    </div>

    <template id="reply-form-template">
        <div class="comment-form reply">
            <form
                hx-post="/r/comments/<%= postId %>"
                hx-swap="beforeend"
                hx-on::after-on-load="afterReply(event)"
                class="comment-form__field active"
            >
                <input id="parent" name="parentId" type="hidden" />

                <textarea
                    id="content"
                    name="content"
                    class="comment-form__textarea"
                    placeholder="Що скажете на це?"
                ></textarea>

                <div class="comment-form__buttons">
                    <sl-button
                        class="cancel-reply-btn ghost"
                        size="small"
                        variant="text"
                        type="button"
                        pill
                    >
                        Скасувати
                    </sl-button>

                    <sl-button
                        class="submit-reply-btn"
                        size="small"
                        variant="primary"
                        type="submit"
                        pill
                    >
                        Відправити
                    </sl-button>
                </div>
            </form>
        </div>
    </template>

    <script>
        const postId = "<%= postId %>";
        let activeFormId = null;


        function removeAllReplyForms() {
            const formContainers = document.querySelectorAll(
                '.reply-form-container',
            );
            formContainers.forEach((container) => {
                container.innerHTML = '';
            });

            activeFormId = null;
        }

        function createReplyForm(commentId, replyId) {
            removeAllReplyForms();

            const template = document.getElementById('reply-form-template');
            const formNode = template.content.cloneNode(true).firstElementChild;

            const textarea = formNode.querySelector('#content');
            const parent = formNode.querySelector('#parent');
            const cancelBtn = formNode.querySelector('.cancel-reply-btn');
            const submitBtn = formNode.querySelector('.submit-reply-btn');

            parent.setAttribute('value', commentId);
            formNode.setAttribute('hx-target', `#replies-${commentId}`)
            htmx.process(formNode);

            cancelBtn.addEventListener('click', () => {
                removeAllReplyForms();
            });

            const containerId = `reply-form-container-${replyId ?? commentId}`;
            const container = document.getElementById(containerId);
            if (container) {
                container.innerHTML = '';
                container.appendChild(formNode);

                activeFormId = commentId;

                setTimeout(() => {
                    textarea.focus();
                }, 0);
            }
        }

        function afterReply(event) {
            console.log(event, event.detail.failed)
            if (event.detail.failed) {
                return
            }

            console.log(event.detail.requestConfig.path);
            removeAllReplyForms();

            const commentId = event.detail.requestConfig.parameters.parentId;
            if (!commentId) {
                return void console.error(`Comment ID not found in request path`);
            }

            const commentContainer = document.getElementById(`comment-${commentId}`);
            if (!commentContainer) {
                return void console.error(`Comment container for comment ${commentId} not found`);
            }

            const $commentState = Alpine.$data(commentContainer);
            $commentState.repliesCount++;
            $commentState.showReplies = true;
        }

        document.addEventListener('click', (e) => {
            if (
                activeFormId &&
                !e.target.closest('.comment-form') &&
                !e.target.closest('[data-reply-btn]')
            ) {
                removeAllReplyForms();
            }
        });
    </script>

    <style>
        .reply-form-container {
            margin: 10px 0;
        }

        .sm {
            transition: transform 0.2s ease;
        }

        .comment-load-more {
            text-align: center;
            padding: 15px;
            margin-top: 10px;
        }
    </style>
</div>
