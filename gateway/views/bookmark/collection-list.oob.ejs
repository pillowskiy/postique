<ul class="collections-list">
    <li
        class="collection-item"
        x-data="{bookmarksCount: 0, targetId: '<%= targetId %>'}"
    >
        <sl-checkbox
            x-on:sl-change="handleCheckbox(event)"
            help-text="Зберігається в колекції «Список читання»"
        >
            Список читання
        </sl-checkbox>
        <sl-icon
            style="color: var(--sl-color-neutral-600)"
            name="lock"
        ></sl-icon>
    </li>

    <% collections.forEach((collection) => { %>
    <li
        class="collection-item"
        x-data="{bookmarksCount: <%= collection.bookmarksCount %>, id: '<%= collection.id %>', targetId: '<%= targetId %>'}"
    >
        <sl-checkbox
            x-on:sl-change="handleCheckbox(event)"
            help-text="<%= collection.description %>"
        >
            <%= collection.name %>
        </sl-checkbox>
        <span
            class="collection-item__count"
            x-text="`${bookmarksCount} закладки`"
        >
        </span>
    </li>
    <% }); %>
</ul>

<script>
    function addBookmark(targetId, collectionId) {
        const query = new URLSearchParams();
        if (collectionId) {
            query.append('collectionId', collectionId);
        }

        return htmx.__.ajax('POST', `/r/bookmarks/${targetId}?${query}`, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }

    function removeBookmark(bookmarkId, collectionId) {
        const query = new URLSearchParams();
        if (collectionId) {
            query.append('collectionId', collectionId);
        }

        return htmx.__.ajax('DELETE', `/r/bookmarks/${bookmarkId}?${query}`, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }

    function postAction(type, stateProxy) {
        return function () {
            stateProxy.bookmarksCount += type === 'add' ? 1 : -1;
            stateProxy.saved = type === 'add' ? true : false;
        };
    }

    function handleCheckbox(event, globalNode) {
        const { checked } = event.target;
        const vals = Alpine.$data(event.target);

        let method;
        if (checked) {
            method = addBookmark(vals.targetId, vals.id ?? null).then(
                postAction('add', vals),
            );
        } else {
            method = removeBookmark(vals.targetId, vals.id ?? null).then(
                postAction('remove', vals),
            );
        }
    }
</script>
